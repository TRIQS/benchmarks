#!/usr/bin/env python

import sys, os
sys.path.append(os.getcwd() + "/..")
sys.path.append(os.getcwd() + "/../../common")
from model import *
import util

from h5 import HDFArchive
from triqs.utility import mpi
from triqs.atom_diag import *
from triqs import version

# --------- Construct the AtomDiag Object ----------

fop_imp  = [(s,o) for s, n_orb in gf_struct for o in range(n_orb)]
fop_bath = [(s,o) for o, s in product(orb_bath_names, spin_names)]
fop_tot  = fop_imp + fop_bath

ad_tot = AtomDiag(h_tot, fop_tot)

# --------- Calculate the single-particle Green function ----------

gf_struct_tot = [[s, n_orb + len(orb_bath_names)] for s in spin_names]
G_tau_tot = atomic_g_tau(ad_tot, beta, gf_struct_tot, n_tau)

name_list = [bl for bl, n_orb in gf_struct]
block_list = [G_tau_tot[bl][:n_orb, :n_orb] for bl, n_orb in gf_struct]
G_tau = BlockGf(name_list=name_list, block_list=block_list)

# -------- Save in archive ---------
if mpi.is_master_node():
    with HDFArchive("../results/atomdiag.h5",'w') as results:
        results["G"] = G_tau

        import inspect
        import __main__
        results.create_group("Solver_Info")
        info_grp = results["Solver_Info"]
        info_grp["solver_name"] = "atomdiag"
        info_grp["solver"] = ad_tot
        info_grp["solver_version"] = version.version
        info_grp["solver_git_hash"] = version.git_hash
        info_grp["script"] = inspect.getsource(__main__)
